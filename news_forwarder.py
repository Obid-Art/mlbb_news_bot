from telethon import TelegramClient, events
from telegram import Bot
from bot_utils import load_subscribers
import asyncio

# üîê Telegram API
api_id = 27880303
api_hash = "e68a3ac3d1f64e81b1ff01f6c58d2060"
session_name = "mlbb_listener"

# ü§ñ Bot API
bot_token = "7922676476:AAEApJ7cZdcHR9LoOlO6TaeVymIRcGOfyFg"

# üîÑ –ö–∞–Ω–∞–ª-–∏—Å—Ç–æ—á–Ω–∏–∫ (–±–µ–∑ @)
channel_username = "MLBBNews_sng"

# ‚ñ∂Ô∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
client = TelegramClient(session_name, api_id, api_hash)
bot = Bot(token=bot_token)

@client.on(events.NewMessage(chats=channel_username))
async def handler(event):
    message = event.message
    text = event.raw_text
    subscribers = load_subscribers()

    if not subscribers:
        print("‚ö†Ô∏è –ù–µ—Ç –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –≤ –±–∞–∑–µ.")
        return

    for chat_id in subscribers:
        try:
            await bot.copy_message(chat_id=chat_id,
                                   from_chat_id=message.chat_id,
                                   message_id=message.id)
            print(f"üì® –ü–µ—Ä–µ—Å–ª–∞–Ω–æ —Å –º–µ–¥–∏–∞ –≤ {chat_id}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ {chat_id}: {e}")

async def main():
    await client.start()
    print("‚úÖ Listener –∑–∞–ø—É—â–µ–Ω –∏ —Å–ª–µ–¥–∏—Ç –∑–∞ –Ω–æ–≤—ã–º–∏ –ø–æ—Å—Ç–∞–º–∏...")
    await client.run_until_disconnected()

if __name__ == "__main__":
    asyncio.run(main())